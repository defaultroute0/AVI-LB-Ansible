---
- hosts: localhost
  connection: local
  vars_files:
    - "vars/creds.yml"
  vars:
    tenant: admin
  roles:
    - role: avinetworks.avisdk

# we working with these var roots
# bookstore_siteA_web_vs: 
# bookstore_siteA_app_vs: 
# bookstore_siteB_web_vs:
# bookstore_siteB_app_vs: 

  tasks:
    - name: lookup cluster 1 bookstore_siteA_web_vs VS
    # get SITE1 VIRTUAL SERVICE IP
      avi_api_session:
        avi_credentials: "{{ avi_credentials }}"
        controller: "{{ c1_address }}"
        http_method: get
        path: virtualservice
        #path: vsvip
        tenant: admin
        params:
          { name: bookstore_siteA_web_vs }
          #{ name: bookstore_siteA_web_vs } is basically ?name=xyz
      register: bookstore_siteA_web_vs_ctrl1
    - debug: var=bookstore_siteA_web_vs_ctrl1['obj']['results'][0]['vip'][0]['ip_address']['addr']
    
    - name: lookup cluster 1 uuid
    # get SITE1 cluster uuid
      avi_api_session:
        avi_credentials: "{{ avi_credentials }}"
        controller: "{{ c1_address }}"
        http_method: get
        path: cluster
      register: cluster_ctrl1
   
    - name: lookup cluster 2 bookstore_siteB_web_vs VS
    # get SITE1 VIRTUAL SERVICE IP
      avi_api_session:
        avi_credentials: "{{ avi_credentials }}"
        controller: "{{ c2_address }}"
        http_method: get
        path: virtualservice
        tenant: admin
        params:
          { name: bookstore_siteB_web_vs }
      register: bookstore_siteB_web_vs_ctrl2
    - debug: 
        var: bookstore_siteB_web_vs_ctrl2['obj']['results'][0]['vip'][0]['ip_address']['addr']
    
    - name: lookup cluster 2 uuid
    #get SITE1 cluster uuid
      avi_api_session:
        avi_credentials: "{{ avi_credentials }}"
        controller: "{{ c2_address }}"
        http_method: get
        path: cluster
      register: cluster_ctrl2
    
    - name: Define global bookstore.avidemo.anz.sddc.local vs
    # now use the above params and create new GSLB service record
      avi_gslbservice:
        avi_credentials: "{{ avi_credentials }}"
        controller: "{{ c1_address }}"
        name: bookstore.avidemo.anz.sddc.local
        domain_names:
        - bookstore.avidemo.anz.sddc.local
        down_response: 
          type: GSLB_SERVICE_DOWN_RESPONSE_NONE
        groups:
        - members:
          - cluster_uuid: "{{ cluster_ctrl1.obj.uuid }}"
            ip:
              addr: "{{ bookstore_siteA_web_vs_ctrl1['obj']['results'][0]['vip'][0]['ip_address']['addr'] }}"
              type: V4
            vs_uuid: "{{ bookstore_siteA_web_vs_ctrl1['obj']['results'][0]['uuid'] }}"
          name: bookstore-pool1
          priority: 10
        - members:
          - cluster_uuid: "{{ cluster_ctrl2.obj.uuid }}"
            ip:
              addr: "{{ bookstore_siteB_web_vs_ctrl2['obj']['results'][0]['vip'][0]['ip_address']['addr'] }}"
              type: V4
            vs_uuid: "{{ bookstore_siteB_web_vs_ctrl2['obj']['results'][0]['uuid'] }}"
          name: bookstore-pool2
          priority: 10
        health_monitor_refs:
          - /api/healthmonitor?name=System-GSLB-HTTP
        site_persistence_enabled: false
        controller_health_status_enabled: true
        pool_algorithm: GSLB_SERVICE_ALGORITHM_PRIORITY
        use_edns_client_subnet: false
        enabled: true
        is_federated: true
        tenant: admin
